@page "/compare"
@using SOA_CA1.Service
@inject IDogBreedsService DogBreedsService
@inject IWebHostEnvironment WebHostEnvironment



<PageTitle>Compare</PageTitle>


<h3>Select Two Dog Breeds to Compare</h3>

<div>
    <select @bind="selectedBreed1">
        <option value="">Select the first breed...</option>
        @foreach (var breed in dogBreeds)
        {
            <option value="@breed">@breed</option>
        }
    </select>

    <select @bind="selectedBreed2">
        <option value="">Select the second breed...</option>
        @foreach (var breed in dogBreeds)
        {
            <option value="@breed">@breed</option>
        }
    </select>

    <button @onclick="FetchDogBreeds" disabled="@(string.IsNullOrEmpty(selectedBreed1) || string.IsNullOrEmpty(selectedBreed2))">Compare</button>
</div>

@if (dogBreed1 != null && dogBreed2 != null)
{
    <h4>Comparison between @dogBreed1.name and @dogBreed2.name</h4>
    <div class="table-compare">
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>@dogBreed1.name</th>
                <th>@dogBreed2.name</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Max Height</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed1.max_height_male, dogBreed2.max_height_male))">@dogBreed1.max_height_male</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed2.max_height_male, dogBreed1.max_height_male))">@dogBreed2.max_height_male</td>
            </tr>
            <tr>
                <td>Max Weight</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed1.max_weight_male, dogBreed2.max_weight_male))">@dogBreed1.max_weight_male</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed2.max_weight_male, dogBreed2.max_weight_male))">@dogBreed2.max_weight_male</td>
            </tr>
            <tr>
                <td>Life Expectancy</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed1.max_life_expectancy, dogBreed2.max_life_expectancy))">@dogBreed1.max_life_expectancy</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed2.max_life_expectancy, dogBreed1.max_life_expectancy))">@dogBreed2.max_life_expectancy</td>
            </tr>
            <tr>
                <td>Playfulness</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed1.playfulness, dogBreed2.playfulness))">@dogBreed1.playfulness</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed2.playfulness, dogBreed1.playfulness))">@dogBreed2.playfulness</td>
            </tr>
            <tr>
                <td>Protectiveness</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed1.protectiveness, dogBreed2.protectiveness))">@dogBreed1.protectiveness</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed2.protectiveness, dogBreed1.protectiveness))">@dogBreed2.protectiveness</td>
            </tr>
            <tr>
                <td>Trainability</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed1.trainability, dogBreed2.trainability))">@dogBreed1.trainability</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed2.trainability, dogBreed1.trainability))">@dogBreed2.trainability</td>
            </tr>
            <tr>
                <td>Barking</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed1.barking, dogBreed2.barking))">@dogBreed1.barking</td>
                    <td style="@GetBackgroundColor(CompareValues(dogBreed2.barking, dogBreed1.barking))">@dogBreed2.barking</td>
            </tr>
            <tr>
                 <td>Images</td>
                    <td><img src="@dogImages1[0]" alt="Dog Image1" /></td>
                    <td><img src="@dogImages2[0]" alt="Dog Image2" /></td>
             </tr>
        </tbody>
    </table>
    </div>
}
else if (isComparisonComplete)
{
    <p>No breeds found for comparison.</p>
}

@code {
    private List<string> dogBreeds = new List<string>(); // List of dog breeds from file
    private string selectedBreed1; // Selected breed 1 from dropdown
    private string selectedBreed2; // Selected breed 2 from dropdown
    private DogBreed dogBreed1; // First dog breed for comparison
    private string[] dogImages1;
    private DogBreed dogBreed2; // Second dog breed for comparison
    private string[] dogImages2;
    private bool isComparisonComplete = false;

    enum CompareResult
    {
        Green,
        Red
    }

    protected override async Task OnInitializedAsync()
    {
        // Load the breeds from a file (assuming it's in the wwwroot folder)
        string breedsFilePath = Path.Combine(WebHostEnvironment.WebRootPath, "ListDogBreed.txt");

        // Read the breeds from the file
        if (File.Exists(breedsFilePath))
        {
            dogBreeds = (await File.ReadAllLinesAsync(breedsFilePath)).ToList();
        }
    }

    private async Task FetchDogBreeds()
    {
        isComparisonComplete = false;
        dogBreed1 = await DogBreedsService.GetDogBreedByNameAsync(selectedBreed1);
        if (dogBreed1 != null)
        {
            dogImages1 = await DogBreedsService.GetRandomImagesAsync(selectedBreed1);
        }

        dogBreed2 = await DogBreedsService.GetDogBreedByNameAsync(selectedBreed2);
        if (dogBreed2 != null)
        {
            dogImages2 = await DogBreedsService.GetRandomImagesAsync(selectedBreed2);
        }

        isComparisonComplete = true;
    }

    private string GetBackgroundColor(CompareResult result)
    {
        return result == CompareResult.Green ? "background-color: lightgreen;" : "background-color: lightcoral;";
    }

    private CompareResult CompareValues(float value1, float value2)
    {
        if (value1 == value2)
        {
            return CompareResult.Green;
        }

        return value1 > value2 ? CompareResult.Green : CompareResult.Red;
    }
}
