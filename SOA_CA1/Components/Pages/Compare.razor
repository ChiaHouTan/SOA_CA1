@page "/compare"
@using SOA_CA1.Service
@inject DogBreedsService DogBreedsService
@inject IWebHostEnvironment WebHostEnvironment



<PageTitle>Compare</PageTitle>


<h3>Select Two Dog Breeds to Compare</h3>

<div>
    <select @bind="selectedBreed1">
        <option value="">Select the first breed...</option>
        @foreach (var breed in dogBreeds)
        {
            <option value="@breed">@breed</option>
        }
    </select>

    <select @bind="selectedBreed2">
        <option value="">Select the second breed...</option>
        @foreach (var breed in dogBreeds)
        {
            <option value="@breed">@breed</option>
        }
    </select>

    <button @onclick="FetchDogBreeds" disabled="@(string.IsNullOrEmpty(selectedBreed1) || string.IsNullOrEmpty(selectedBreed2))">Compare</button>
</div>

@if (dogBreed1 != null && dogBreed2 != null)
{
    <h4>Comparison between @dogBreed1.name and @dogBreed2.name</h4>
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>@dogBreed1.name</th>
                <th>@dogBreed2.name</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Max Height</td>
                <td>@dogBreed1.max_height_male</td>
                <td>@dogBreed2.max_height_male</td>
            </tr>
            <tr>
                <td>Max Weight</td>
                <td>@dogBreed1.max_weight_male</td>
                <td>@dogBreed2.max_weight_male</td>
            </tr>
            <tr>
                <td>Life Expectancy</td>
                <td>@dogBreed1.max_life_expectancy</td>
                <td>@dogBreed2.max_life_expectancy</td>
            </tr>
            <tr>
                <td>Playfulness</td>
                <td>@dogBreed1.playfulness</td>
                <td>@dogBreed2.playfulness</td>
            </tr>
            <tr>
                <td>Protectiveness</td>
                <td>@dogBreed1.protectiveness</td>
                <td>@dogBreed2.protectiveness</td>
            </tr>
            <tr>
                <td>Trainability</td>
                <td>@dogBreed1.trainability</td>
                <td>@dogBreed2.trainability</td>
            </tr>
            <tr>
                <td>Barking</td>
                <td>@dogBreed1.barking</td>
                <td>@dogBreed2.barking</td>
            </tr>
        </tbody>
    </table>
}
else if (isComparisonComplete)
{
    <p>No breeds found for comparison.</p>
}

@code {
    private List<string> dogBreeds = new List<string>(); // List of dog breeds from file
    private string selectedBreed1; // Selected breed 1 from dropdown
    private string selectedBreed2; // Selected breed 2 from dropdown
    private DogBreed dogBreed1; // First dog breed for comparison
    private DogBreed dogBreed2; // Second dog breed for comparison
    private bool isComparisonComplete = false;

    protected override async Task OnInitializedAsync()
    {
        // Load the breeds from a file (assuming it's in the wwwroot folder)
        string breedsFilePath = Path.Combine(WebHostEnvironment.WebRootPath, "ListDogBreed.txt");

        // Read the breeds from the file
        if (File.Exists(breedsFilePath))
        {
            dogBreeds = (await File.ReadAllLinesAsync(breedsFilePath)).ToList();
        }
    }

    private async Task FetchDogBreeds()
    {
        isComparisonComplete = false;
        dogBreed1 = await DogBreedsService.GetDogBreedByNameAsync(selectedBreed1);
        dogBreed2 = await DogBreedsService.GetDogBreedByNameAsync(selectedBreed2);
        isComparisonComplete = true;
    }
}
